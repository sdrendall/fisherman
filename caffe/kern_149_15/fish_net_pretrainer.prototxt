name: "fish_filter"

layer {
  name: "training_cells"
  type: "Data"
  top: "image"
  top: "label"

  include {
    phase: TRAIN
  }

  data_param {
    source: "/home/sam/code/fisherman/data/original_and_partial_qc_2_channel_k149_scaled/training_db"
    batch_size: 256
    backend: LMDB
  }
}

layer {
  name: "testing_cells"
  type: "Data"
  top: "image"
  top: "label"

  include {
    phase: TEST
  }

  data_param {
    source: "/home/sam/code/fisherman/data/original_and_partial_qc_2_channel_k149_scaled/testing_db"
    batch_size: 256
    backend: LMDB
  }
}

# Input is 149 x 149

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "image"
  top: "conv1"

  param {
    lr_mult: 1
  }

  param {
    lr_mult: 2
  }

  convolution_param {
    num_output: 15
    kernel_size: 15
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

# Convs to 135 x 135

layer { 
    name: "pool1"
    type: "Pooling" 
    bottom: "conv1" 
    top: "pool1" 
    pooling_param {
      pool: MAX
      kernel_size: 5
      stride: 5
    }
}

# Pools to 27 x 27

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 7
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

# Convs to 21 x 21

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}

# Pools to 7 x 7

layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 32
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}

layer{
  name: "drop1"
  type: "Dropout"
  bottom: "ip1"
  top: "ip1"
  dropout_param {
    dropout_ratio: 0.5
  }
  include {
    phase: TRAIN
  }
}

layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
