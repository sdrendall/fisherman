name: "fish_net"

layer {
  name: "training_cells"
  type: "Data"
  top: "data"
  top: "label"

  include {
    phase: TRAIN
  }

  transform_param {
    scale: 0.000185634
    #mean_value: 617.04
  }

  data_param {
    source: "/home/sam/code/fisherman/data/extended_original/extended_original_training_db"
    batch_size: 256
    backend: LMDB
  }
}

layer {
  name: "testing_cells"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.000185634
    #mean_value: 617.04
  }

  data_param {
    source: "/home/sam/code/fisherman/data/extended_original/extended_original_testing_db"
    batch_size: 256
    backend: LMDB
  }
}

# Input is 49 x 49

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"

  param {
    lr_mult: 1
  }

  param {
    lr_mult: 2
  }

  convolution_param {
    num_output: 20
    kernel_size: 8
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

# Convs to 42 X 42

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}

# Pools to 14 x 14

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

# Convs to 10 x 10

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

# Pools to 5 x 5

layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}

layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
